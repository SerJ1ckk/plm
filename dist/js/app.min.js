/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_script_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/script.js */ \"./src/js/modules/script.js\");\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function (event) { \r\n\r\n    \r\n});\n\n//# sourceURL=webpack://gulp22/./src/js/app.js?");

/***/ }),

/***/ "./src/js/modules/script.js":
/*!**********************************!*\
  !*** ./src/js/modules/script.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nwindow.onload = function () {\r\n\r\n    function _removeClasses(arr,name){\r\n        for(let i = 0; i < arr.length; i++){\r\n            arr[i].classList.remove(name);\r\n        }\r\n    }\r\n\r\n    document.addEventListener('click', documentActions);\r\n\r\n    function documentActions(e){\r\n        const targetElement = e.target;\r\n        if(window.innerWidth > 768){\r\n            if(targetElement.classList.contains('menu__arrow')){\r\n                targetElement.closest('.menu__item').classList.toggle('_hover');\r\n            }\r\n            if(!targetElement.closest('.menu__item') && document.querySelectorAll('.menu__item._hover').length > 0){\r\n                _removeClasses(document.querySelectorAll('.menu__item._hover'), '_hover');\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n        /*----------------DATA-SPOLLER--------------------------*/\r\n\r\n        const spollersArray = document.querySelectorAll('[data-spollers]');\r\n        if (spollersArray.length > 0) {\r\n            const spollersRegular = Array.from(spollersArray).filter(function(item, index, self) {\r\n                return !item.dataset.spollers.split(',')[0];\r\n            });\r\n    \r\n            if (spollersRegular.length > 0) {\r\n                initSpollers(spollersRegular);\r\n            }\r\n    \r\n            const spollersMedia = Array.from(spollersArray).filter(function(item, index, self) {\r\n                return item.dataset.spollers.split(',')[0];\r\n            });\r\n    \r\n            if(spollersMedia.length > 0) {\r\n                const breakpointsArray = [];\r\n                spollersMedia.forEach(item => {\r\n                    const params = item.dataset.spollers;\r\n                    const breakpoint = {};\r\n                    const paramsArray = params.split(',');\r\n                    breakpoint.value = paramsArray[0];\r\n                    breakpoint.type = paramsArray[1] ? paramsArray[1].trim() : 'max';\r\n                    breakpoint.item = item;\r\n                    breakpointsArray.push(breakpoint);\r\n                });\r\n    \r\n    \r\n                let mediaQueries = breakpointsArray.map(function (item) {\r\n                    return '(' + item.type + '-width: ' + item.value + 'px),' + item.value + ',' + item.type;\r\n                });\r\n                mediaQueries = mediaQueries.filter(function (item, index, self) {\r\n                    return self.indexOf(item) === index;\r\n                });\r\n    \r\n    \r\n                mediaQueries.forEach(breakpoint => {\r\n                    const paramsArray = breakpoint.split(',');\r\n                    const mediaBreakpoint = paramsArray[1];\r\n                    const mediaType = paramsArray[2];\r\n                    const matchMedia = window.matchMedia(paramsArray[0]);\r\n    \r\n                    const spollersArray = breakpointsArray.filter(function (item) {\r\n                        if (item.value === mediaBreakpoint && item.type === mediaType){\r\n                            return true;\r\n                        }\r\n                    });\r\n    \r\n                    matchMedia.addListener(function () {\r\n                        initSpollers(spollersArray, matchMedia);\r\n                    });\r\n                    initSpollers(spollersArray, matchMedia);\r\n                });\r\n            }\r\n    \r\n            function initSpollers(spollersArray, matchMedia = false) {\r\n                spollersArray.forEach(spollersBlock => {\r\n                    spollersBlock = matchMedia ? spollersBlock.item : spollersBlock;\r\n                    if (matchMedia.matches || !matchMedia) {\r\n                        spollersBlock.classList.add('_init');\r\n                        initSpollerBody(spollersBlock);\r\n                        spollersBlock.addEventListener('click', setSpollerAction);\r\n                    } else {\r\n                        spollersBlock.classList.remove('_init');\r\n                        initSpollerBody(spollersBlock, false);\r\n                        spollersBlock.removeEventListener('click', setSpollerAction);\r\n                    }\r\n                });\r\n            }\r\n    \r\n            function initSpollerBody(spollersBlock, hideSpollerBody = true) {\r\n                const spollerTitles = spollersBlock.querySelectorAll('[data-spoller]');\r\n                if (spollerTitles.length > 0) {\r\n                    spollerTitles.forEach(spollerTitle => {\r\n                        if (hideSpollerBody) {\r\n                            spollerTitle.removeAttribute('tabindex');\r\n                            if (!spollerTitle.classList.contains('_active')){\r\n                                spollerTitle.nextElementSibling.hidden = true;\r\n                            }\r\n                        } else {\r\n                            spollerTitle.setAttribute('tabindex', '-1');\r\n                            spollerTitle.nextElementSibling.hidden = false;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n    \r\n    \r\n            function setSpollerAction(e) {\r\n                const el = e.target;\r\n                if (el.hasAttribute('data-spoller') || el.closest('[data-spoller]')) {\r\n                    const spollerTitle = el.hasAttribute('data-spoller') ? el : el.closest('[data-spoller]');\r\n                    const spollersBlock = spollerTitle.closest('[data-spollers]');\r\n                    const oneSpoller = spollersBlock.hasAttribute('data-one-spoller') ? true : false;\r\n                    if (!spollersBlock.querySelectorAll('._slide').length) {\r\n                        if (oneSpoller && !spollerTitle.classList.contains('_active')){\r\n                            hideSpollersBody(spollersBlock);\r\n                        }\r\n                        spollerTitle.classList.toggle('_active');\r\n                        _slideToggle(spollerTitle.nextElementSibling, 500);\r\n                    }\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n    \r\n            function hideSpollersBody(spollersBlock){\r\n                const spollerActiveTitle = spollersBlock.querySelector('[data-spoller]._active');\r\n                if (spollerActiveTitle) {\r\n                    spollerActiveTitle.classList.remove('_active');\r\n                    _slideUp(spollerActiveTitle.nextElementSibling, 500);\r\n                }\r\n            }\r\n        }\r\n    \r\n        /***********************************************BURGER-MENU******************************************************/\r\n    \r\n        const iconMenu = document.querySelector('.icon-menu');\r\n        const menuHeader = document.querySelector('.menu__body');\r\n        if(iconMenu){\r\n            iconMenu.addEventListener(\"click\", function(e) {\r\n                document.body.classList.toggle('_lock');\r\n                iconMenu.classList.toggle('_active');\r\n                menuHeader.classList.toggle('_active');\r\n            })\r\n        }\r\n    \r\n    \r\n        /********************************SLIDE-TOGGLE************************************************************/\r\n    \r\n        let _slideUp = (target, duration = 500) => {\r\n            if (!target.classList.contains('_slide')) {\r\n                target.classList.add('_slide');\r\n                target.style.transitionProperty = 'height, margin, padding';\r\n                target.style.transitionDuration = duration + 'ms';\r\n                target.style.height = target.offsetHeight + 'px';\r\n                target.offsetHeight;\r\n                target.style.overflow = 'hidden';\r\n                target.style.height = 0;\r\n                target.style.paddingTop = 0;\r\n                target.style.paddingBottom = 0;\r\n                target.style.marginTop = 0;\r\n                target.style.marginBottom = 0;\r\n                window.setTimeout(() => {\r\n                    target.hidden = true;\r\n                    target.style.removeProperty('height');\r\n                    target.style.removeProperty('padding-top');\r\n                    target.style.removeProperty('padding-bottom');\r\n                    target.style.removeProperty('margin-top');\r\n                    target.style.removeProperty('margin-bottom');\r\n                    target.style.removeProperty('overflow');\r\n                    target.style.removeProperty('transition-duration');\r\n                    target.style.removeProperty('transition-property');\r\n                    target.classList.remove('_slide');\r\n                }, duration);\r\n            }\r\n        }\r\n    \r\n        let _slideDown = (target, duration = 500) => {\r\n            if (!target.classList.contains('_slide')) {\r\n                target.classList.add('_slide');\r\n                if (target.hidden) {\r\n                    target.hidden = false;\r\n                }\r\n                let height = target.offsetHeight;\r\n                target.style.overflow = 'hidden';\r\n                target.style.height = 0;\r\n                target.style.paddingTop = 0;\r\n                target.style.paddingBottom = 0;\r\n                target.style.marginTop = 0;\r\n                target.style.marginBottom = 0;\r\n                target.offsetHeight;\r\n                target.style.transitionProperty = 'height, margin, padding';\r\n                target.style.transitionDuration = duration + 'ms';\r\n                target.style.height = height + 'px';\r\n                target.style.removeProperty('padding-top');\r\n                target.style.removeProperty('padding-bottom');\r\n                target.style.removeProperty('margin-top');\r\n                target.style.removeProperty('margin-bottom');\r\n                window.setTimeout(() => {\r\n                    target.style.removeProperty('height');\r\n                    target.style.removeProperty('overflow');\r\n                    target.style.removeProperty('transition-duration');\r\n                    target.style.removeProperty('transition-property');\r\n                    target.classList.remove('_slide');\r\n                }, duration);\r\n            }\r\n        }\r\n    \r\n        let _slideToggle = (target, duration = 500) => {\r\n            if (target.hidden) {\r\n                return _slideDown(target, duration);\r\n            } else {\r\n                return _slideUp(target, duration);\r\n            }\r\n        }\r\n}\n\n//# sourceURL=webpack://gulp22/./src/js/modules/script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;